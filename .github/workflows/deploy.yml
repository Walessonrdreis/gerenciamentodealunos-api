name: Deploy to Production

# Configuração de deploy com credenciais atualizadas
on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        tools: composer:v2
        coverage: none

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install Dependencies
      run: |
        composer install --no-dev --prefer-dist --no-progress --optimize-autoloader
        composer dump-autoload --optimize

    - name: Setup Production Environment
      env:
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
      run: |
        export DB_PASSWORD
        export JWT_SECRET
        php bin/generate-env.php production

    - name: Deploy to Hostinger
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: 62.72.62.253
        username: u492226363.deploy
        password: ${{ secrets.FTP_PASSWORD }}
        server-dir: /api/
        protocol: ftp
        port: 21
        security: loose
        dangerous-clean-slate: false
        log-level: verbose
        timeout: 60000
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/tests/**
          README.md
          .env.example
          config/production.php
          phpunit.xml

    - name: Run Migrations
      run: |
        sleep 30 # Aguarda 30 segundos para garantir que os arquivos foram enviados
        echo "Executando migrações..."
        MIGRATION_KEY="migration_key_$(date +%Y%m%d)"
        KEY=$(echo -n "$MIGRATION_KEY" | jq -sRr @uri)
        echo "Chave de migração: $MIGRATION_KEY"
        curl -v -X GET "https://seoeads.com/api/bin/run-migrations.php?key=$KEY" || true
        echo "Fim da execução das migrações" 